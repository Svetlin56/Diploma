[
    {
        "id": "mongo-read-flow",
        "type": "tab",
        "label": "Greenhouse Chart",
        "disabled": false,
        "info": ""
    },
    {
        "id": "arduino_serial",
        "type": "serial in",
        "z": "mongo-read-flow",
        "name": "Arduino Serial",
        "serial": "arduino_port",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "parse_data"
            ]
        ]
    },
    {
        "id": "parse_data",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Parse Sensor Data",
        "func": "\nlet enabled = flow.get('systemEnabled');\nif (!enabled) return null;\n\nif (!msg.payload.startsWith(\"DATA:\")) return null;\n\nconst parts = msg.payload.replace(\"DATA:\", \"\").trim().split(\",\");\nif (parts.length !== 4) return null;\n\nconst [temperature, humidity, soilMoisture, lightLevel] = parts.map(Number);\n\nconst now = new Date();\nconst offsetMs = now.getTimezoneOffset() * 60 * 1000;\nconst localTime = new Date(now.getTime() - offsetMs);\n\nmsg.payload = {\n    temperature: `${parseFloat(temperature).toFixed(1)} °C`,\n    humidity: `${parseFloat(humidity).toFixed(1)} %`,\n    soilMoisture: parseInt(soilMoisture),\n    lightLevel: parseInt(lightLevel),\n    timestamp: localTime\n\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "e09d63523b03694d",
                "7bd7196cc8b4b1d0",
                "7113c758c5ce329a",
                "e95fab41fd8bd2c1",
                "914196afa103d86b",
                "71b810fd4121dcd2",
                "mongodb_out"
            ]
        ]
    },
    {
        "id": "mongodb_out",
        "type": "mongodb out",
        "z": "mongo-read-flow",
        "mongodb": "mongo-local",
        "name": "Insert to MongoDB",
        "collection": "sensorData",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "e09d63523b03694d",
        "type": "debug",
        "z": "mongo-read-flow",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 600,
        "wires": []
    },
    {
        "id": "7bd7196cc8b4b1d0",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Extract Temperature",
        "func": "let tempString = msg.payload.temperature;\nlet numericValue = parseFloat(tempString);\nmsg.payload = numericValue;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 140,
        "wires": [
            [
                "6ab55c6cfab40f01",
                "auto_cooling_control"
            ]
        ]
    },
    {
        "id": "7113c758c5ce329a",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Extract Humidity",
        "func": "let humidity = msg.payload.humidity;\nmsg.payload = parseFloat(humidity);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 220,
        "wires": [
            [
                "e268ad001161e048"
            ]
        ]
    },
    {
        "id": "e95fab41fd8bd2c1",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Extract Soil Moisture",
        "func": "msg.payload = msg.payload.soilMoisture;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 380,
        "wires": [
            [
                "1d4df91c876169c8",
                "auto_watering_control"
            ]
        ]
    },
    {
        "id": "914196afa103d86b",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Extract Light Level",
        "func": "msg.payload = msg.payload.lightLevel;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 500,
        "wires": [
            [
                "929b78eb549db508"
            ]
        ]
    },
    {
        "id": "51240238b44a5b6c",
        "type": "e-mail",
        "z": "mongo-read-flow",
        "server": "smtp.mail.bg",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "svetlinvatev@mail.bg",
        "dname": "Email Alert",
        "x": 1110,
        "y": 100,
        "wires": []
    },
    {
        "id": "6ab55c6cfab40f01",
        "type": "ui_gauge",
        "z": "mongo-read-flow",
        "name": "",
        "group": "bbfe336987539c10",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "70",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 40,
        "wires": []
    },
    {
        "id": "e268ad001161e048",
        "type": "ui_gauge",
        "z": "mongo-read-flow",
        "name": "",
        "group": "e07d3283fd393735",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 220,
        "wires": []
    },
    {
        "id": "1d4df91c876169c8",
        "type": "ui_gauge",
        "z": "mongo-read-flow",
        "name": "",
        "group": "a827818e8131c804",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Soil Moisture",
        "label": "Raw",
        "format": "{{value}}",
        "min": 0,
        "max": "1023",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 380,
        "wires": []
    },
    {
        "id": "929b78eb549db508",
        "type": "ui_gauge",
        "z": "mongo-read-flow",
        "name": "",
        "group": "d1264e025e50046b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Light Level",
        "label": "Raw",
        "format": "{{value}}",
        "min": 0,
        "max": "1023",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 540,
        "wires": []
    },
    {
        "id": "ui_button_enable",
        "type": "ui_button",
        "z": "mongo-read-flow",
        "name": "Start System",
        "group": "d1264e025e50046b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start System",
        "tooltip": "If you press it will sending sensor data",
        "color": "white",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "toggle_system"
            ]
        ]
    },
    {
        "id": "toggle_system",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Toggle System",
        "func": "flow.set('systemEnabled', msg.payload);\nreturn null;\n",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": []
    },
    {
        "id": "71b810fd4121dcd2",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Checking sensor data",
        "func": "let data = msg.payload;\nlet now = Date.now();\nlet lastEmail = context.get('lastEmail') || 0;\nlet emailCooldown = 30 * 60 * 1000;\n\nlet alerts = [];\n\nlet temp = parseFloat(data.temperature);\nif (temp < 10 || temp > 20) {\n    alerts.push(`Temperature is ${temp}°C (out of range 10–30°C. Auto-Cooling system is enabled!!!)`);\n}\n\nlet humidity = parseFloat(data.humidity);\nif (humidity < 30 || humidity > 80) {\n    alerts.push(`Air humidity is ${humidity}% (out of range 30–80%)`);\n}\n\nlet soil = data.soilMoisture;\nif (soil < 10 || soil > 800) {\n    alerts.push(`Soil moisture is ${soil} (out of range 200–800. Auto-Watering system is enabled!!!)`);\n}\n\nlet light = data.lightLevel;\nif (light < 100 || light > 900) {\n    alerts.push(`Light level is ${light} (out of range 100–900)`);\n}\n\nif (alerts.length > 0 && now - lastEmail > emailCooldown) {\n    context.set('lastEmail', now);\n    msg.topic = \"Sensor Alert\";\n    msg.payload = alerts.join(\"\\n\");\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 60,
        "wires": [
            [
                "51240238b44a5b6c",
                "e8dce38d8746edd9"
            ]
        ]
    },
    {
        "id": "e8dce38d8746edd9",
        "type": "debug",
        "z": "mongo-read-flow",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 20,
        "wires": []
    },
    {
        "id": "auto_cooling_control",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Auto Control Cooling",
        "func": "let temperature = msg.payload;\nlet threshold = 25.0;\n\nif (temperature >= threshold) {\n    return { payload: true };\n} else {\n    return { payload: false };\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 160,
        "wires": [
            [
                "ui_switch_cooling"
            ]
        ]
    },
    {
        "id": "ui_switch_cooling",
        "type": "ui_switch",
        "z": "mongo-read-flow",
        "name": "Cooling System",
        "label": "Auto-Cooling",
        "tooltip": "",
        "group": "bbfe336987539c10",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "cooling",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1220,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "auto_watering_control",
        "type": "function",
        "z": "mongo-read-flow",
        "name": "Auto Control Watering",
        "func": "let soilMoisture = msg.payload;\nlet threshold = 10;\n\nif (soilMoisture < threshold) {\n    return { payload: true };\n} else {\n    return { payload: false };\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 460,
        "wires": [
            [
                "6dafb0d265afc3be"
            ]
        ]
    },
    {
        "id": "6dafb0d265afc3be",
        "type": "ui_switch",
        "z": "mongo-read-flow",
        "name": "Watering System",
        "label": "Auto-Watering",
        "tooltip": "",
        "group": "a827818e8131c804",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "watering",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1190,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "ui_button_disable",
        "type": "ui_button",
        "z": "mongo-read-flow",
        "name": "Stop System",
        "group": "e07d3283fd393735",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop System",
        "tooltip": "If you press it will stop sending sensor data",
        "color": "white",
        "bgcolor": "red",
        "className": "",
        "icon": "stop",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "toggle_system"
            ]
        ]
    },
    {
        "id": "arduino_port",
        "type": "serial-port",
        "name": "",
        "serialport": "COM9",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "false",
        "responsetimeout": "10000"
    },
    {
        "id": "mongo-local",
        "type": "mongodb",
        "hostname": "localhost:27017",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "smartGreenhouse",
        "name": "Mongo Local"
    },
    {
        "id": "bbfe336987539c10",
        "type": "ui_group",
        "name": "Temperature Gauge",
        "tab": "286006618d1620f3",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e07d3283fd393735",
        "type": "ui_group",
        "name": "Humidity Gauge",
        "tab": "286006618d1620f3",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a827818e8131c804",
        "type": "ui_group",
        "name": "Soil Moisture",
        "tab": "286006618d1620f3",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1264e025e50046b",
        "type": "ui_group",
        "name": "Light Level",
        "tab": "286006618d1620f3",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "286006618d1620f3",
        "type": "ui_tab",
        "name": "System",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
